@page "/"
@using LiveTransit.Models
@using LiveTransit.Services

@rendermode InteractiveServer

<PageTitle>LiveTransit</PageTitle>

<h1>Wyszukaj swoją trasę:</h1>
<main>
	<div class="p-3 mb-4 rounded-1 container">
		<div class="row">
			<div class="col">
				<label><b>Czas przyjazdu:</b></label><br />
				<label for="czas_od" class="form-label"><b>Od godzinny: <span id="rangeValue1">0</span></b></label><br />
				<input type="range" class="form-range" min="0" max="24" value="@startHours" id="czas_od" oninput="if(parseInt(document.getElementById('czas_do').value)>=parseInt(document.getElementById('czas_od').value)){rangeValue1.innerText = this.value}else{document.getElementById('czas_od').value=document.getElementById('czas_do').value}">
			</div>
			<div class="col"><br />
				<label for="czas_do" class="form-label"><b>Do godzinny: <span id="rangeValue2">24</span></b></label><br />
				<input type="range" class="form-range" min="0" max="24" value="24" id="czas_do" oninput="if(parseInt(document.getElementById('czas_do').value)>=parseInt(document.getElementById('czas_od').value)){rangeValue2.innerText = this.value}else{document.getElementById('czas_do').value=document.getElementById('czas_od').value}">
			</div>
		</div>
		<div class="row">
			<div class="col">
				<input type="text" class="form-control" placeholder="Punkt startu" aria-label="First name" @bind="startCity">
			</div>
			<div class="col">
				<input type="text" class="form-control" placeholder="Punkt docelowy" aria-label="Last name" @bind="endCity">
			</div>
		</div>
		<div class="row">
			<div class="col">
				<!--
					<select class="form-select m-3 d-inline" style="width: auto;">
					<option hidden selected>Wybierz typ</option>
					<option value="v1" class="pl-0">typ1</option>
					<option value="v2">typ2</option>
					<option value="v3">typ3</option>
				</select>
				-->
				
				<button class="btn btn-primary m-3" @onclick="Find">Wyszukaj</button>
			</div>
		</div>
	</div>

	<h2>Wyniki:</h2>
	<div class="p-3 rounded-1 container">
		@if (routes is null) {
			<p>Prosimy o wyszukanie </p>
		} else {
			foreach (RouteModelInternal route in routes) {
				<div class="card" style="margin-top:5px">
					<div class="card-body linie">
						<div>
							<div class="container">
								<div class="row">
									<div class="col tlo">
										<p style="background: #3366ff; color:white; font-size:large;" class="centered"><b>Linia: @route.shortName</b></p>
									</div>
								</div>
								<div class="row">
									<div class="col title">
										<p class="centered" style="font-size:large;"><b>Czas przyjazdu: @route.arrivalTime, Czas odjazdu: @route.departureTime</b></p>
									</div>
								</div>
								<div>
									<div class="col details">
										<p class="centered" style="font-size:large;"><b>Przystanek: @route.name</b></p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		}
	</div>
</main>



@code {
	private int startHours = 0;
	private int endHours = 24;
	private string startCity = "";
	private string endCity = "";

	[Inject]
	private IJSRuntime JSRuntime { get; set; }

	[Inject]
	public IRouteService routeService { get; set; }

	public IEnumerable<RouteModelInternal> routes { get; set; }

	public async Task Find() {
		Console.WriteLine("Find");
		startHours = int.Parse(await JSRuntime.InvokeAsync<string>("getInnerHtml", "rangeValue1"));
		endHours = int.Parse(await JSRuntime.InvokeAsync<string>("getInnerHtml", "rangeValue2"));

		routes = await routeService.GetFullRoutes(startHours, endHours, startCity, endCity);
	}
}