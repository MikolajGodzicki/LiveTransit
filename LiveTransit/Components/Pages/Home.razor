@page "/"
@using LiveTransit.Models
@using LiveTransit.Services

@rendermode InteractiveServer

<PageTitle>LiveTransit</PageTitle>

<h1>Wyszukaj swoją trasę:</h1>
<main>
	<div class="p-3 mb-4 rounded-1 border container">
		<div class="row">
			<div class="col">
				<label for="czas_od" class="form-label">Odjazd: <span id="rangeValue1">0</span></label><br />
				<input type="range" class="form-range" min="0" max="24" value="@startHours" id="czas_od" oninput="if(parseInt(document.getElementById('czas_do').value)>=parseInt(document.getElementById('czas_od').value)){rangeValue1.innerText = this.value}else{document.getElementById('czas_od').value=document.getElementById('czas_do').value}">
			</div>
			<div class="col">
				<label for="czas_do" class="form-label">Przyjazd: <span id="rangeValue2">24</span></label><br />
				<input type="range" class="form-range" min="0" max="24" value="24" id="czas_do" oninput="if(parseInt(document.getElementById('czas_do').value)>=parseInt(document.getElementById('czas_od').value)){rangeValue2.innerText = this.value}else{document.getElementById('czas_do').value=document.getElementById('czas_od').value}">
			</div>
		</div>
		<div class="row">
			<div class="col">
				<input type="text" class="form-control" placeholder="Punkt startu" aria-label="First name" @bind="startCity">
			</div>
			<div class="col">
				<input type="text" class="form-control" placeholder="Punkt docelowy" aria-label="Last name" @bind="endCity">
			</div>
		</div>
		<div class="row">
			<div class="col">
				<button class="btn btn-primary m-3" @onclick="Find">Wyszukaj</button>
			</div>
		</div>
	</div>
	<div class="p-3 rounded-1 bg-primary container">
		<p>Wyniki</p>
		@if (routes is null) {
			<p>Prosimy o wyszukanie </p>
		} else {
			foreach (RouteModelInternal route in routes) {
				<h2>@route.shortName</h2>
				<h3>@route.arrivalTime</h3>
				<h3>@route.departureTime</h3>
				<h4>@route.name</h4>
			}
		}
	</div>
</main>



@code {
	private int startHours = 0;
	private int endHours = 24;
	private string startCity = "Zaczarnie";
	private string endCity = "Brzozówka";

	[Inject]
	private IJSRuntime JSRuntime { get; set; }

	[Inject]
	public IRouteService routeService { get; set; }

	public IEnumerable<RouteModelInternal> routes { get; set; }

	public async Task Find() {
		Console.WriteLine("Find");
		startHours = int.Parse(await JSRuntime.InvokeAsync<string>("getInnerHtml", "rangeValue1"));
		endHours = int.Parse(await JSRuntime.InvokeAsync<string>("getInnerHtml", "rangeValue2"));

		routes = await routeService.GetFullRoutes(startHours, endHours, startCity, endCity);
	}
}