@page "/Linie"
@using LiveTransit.Services

@rendermode InteractiveServer

<PageTitle>Linie</PageTitle>

<h1>Autobusy</h1>

@foreach (string route in routes)
{
    string[] croppedRoute = route.Split('|');
    string routeLine = croppedRoute.First();
    string routeFull = croppedRoute.Last();
    <div class="card" style="margin-top:5px">
        <div class="card-body linie">
            <div>
                <div class="container">
                    <div class="row">
                        <div class="col tlo">
                            <p style="background: #3366ff; color:white" class="centered">@routeLine</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col title">
                            <p class="centered"><strong>@routeFull</strong></p>
                        </div>
                    </div>
                    <div>
                        <div class="col details">
                            <a href="/Linie/@routeLine">
                                <p class="btn5 centered">Szczegóły</p>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
} 

@if (!isLoading && !allDataLoaded) {
    <button @onclick="() => LoadMore()"></button>
} else if (isLoading) {
    <p>Wczytywanie...</p>
} 


@code {
    [Inject]
    public IRouteService routeService { get; set; }

    private bool isLoading;
    private bool allDataLoaded;

    private int currentIndex = 0;
    private const int pageSize = 10;

    public List<string> routes { get; set; }

    protected override async Task OnInitializedAsync() {
        routes = new List<string>();//(await routeService.GetLinesWithRoutes()).ToList();
        await LoadMore();
    }

    public async Task LoadMore() {
        isLoading = true;
        var newItems = (await routeService.GetRoutesFrom(currentIndex, pageSize)).ToList();

        if (newItems.Count() == 0) {
            allDataLoaded = true;
        } else {
            routes.AddRange(newItems);
            currentIndex += pageSize;
        }
        isLoading = false;
        StateHasChanged();
    }
}